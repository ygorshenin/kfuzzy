<project name = "KFuzzy" basedir = "." default = "main">
  <property name = "build.dir" value = "build" />
  <property name = "classes.dir" value = "${build.dir}/classes" />
  <property name = "docs.dir" value = "${build.dir}/doc" />
  <property name = "jar.dir" value = "${build.dir}/jar" />
  <property name = "lib.dir" value = "lib" />
  <property name = "src.dir" value = "src" />

  <property name = "main-class" value = "kfuzzy.Main" />

  <property name = "packagenames" value = "kfuzzy.*" />

  <path id = "classpath">
    <fileset dir = "${lib.dir}" includes = "**/*.jar" />
    <pathelement location = "${classes.dir}" />
  </path>

  <target name = "clean">
    <delete dir="${build.dir}"/>
  </target>

  <target name = "compile">
    <mkdir dir = "${classes.dir}" />
    <javac includeantruntime = "false" srcdir = "${src.dir}" destdir = "${classes.dir}" classpathref = "classpath" />
    <mkdir dir = "${docs.dir}" />
    <javadoc packagenames = "${packagenames}" sourcepath = "${src.dir}" destdir = "${docs.dir}" classpathref = "classpath" />
  </target>

  <target name = "jar" depends = "compile">
    <mkdir dir = "${jar.dir}" />
    <jar destfile = "${jar.dir}/${ant.project.name}.jar" basedir = "${classes.dir}">
      <manifest>
	<attribute name = "Main-Class" value = "${main-class}" />
      </manifest>
    </jar>
  </target>

  <target name = "run" depends = "jar">
    <java jar = "${jar.dir}/${ant.project.name}.jar" fork = "true">
      <assertions enableSystemAssertions = "true">
	<enable package = "kfuzzy" />
      </assertions>
      <classpath>
	<path refid = "classpath" />
	<path location = "${jar.dir}/${ant.project.name}.jar" />
      </classpath>
    </java>
  </target>

  <target name = "junit" depends = "compile">
    <junit printsummary = "yes">
      <classpath>
	<path refid = "classpath" />
      </classpath>
      <batchtest fork = "yes">
	<fileset dir = "${src.dir}" includes  = "**/*Test.java" />
      </batchtest>
    </junit>
  </target>

  <target name = "main" depends = "clean, run" />
</project>
